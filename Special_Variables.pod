=head1 Perl 5 to Perl 6 Translation of Special Variables.

=head1 DESCRIPTION

A (hopefully) comprehensive list of Perl 5 Special Variables with their Perl 6
equivalents with notes on variations between them where necessary.

=head1 NOTE

I will I<not> be explaining the full functions of the Perl 6 variables. This
document is an attempt to guide you from the Special Varibles in Perl 5 to
their equivalents in Perl 6. For full documentation on the Perl 6 special
variables, please see the Perl 6 documentation for those variables.

=head1 SOURCES

I'm taking my information from http://doc.perl6.org/language/variables
supplemented by http://design.perl6.org/S28.html and input from the
denizens of #perl6 on irc.freenode.org

=head1 SPECIAL VARIABLES

=head2 General Variables

=item $_
X<$_>

Still, thankfully, the general default variable. The main difference in Perl 6
seems to be that you can now call methods on it. For instance, Perl 5's C<say
$_> can be rendered in Perl 6 as C<$_.say>. Furthermore, as it is the default
variable, you don't even need to use the variable name. The previous example
can also be acheived by using C<.say>.

=item @_
X<@_>

As Perl 6 now has function signatures, your arguments can go there, rather
than depending on C<@_> for them. In fact, if you use a function signature, use
of C<@_> will spit at you telling it cannot override an existing signature.

If, however, you do not use a function signature, C<@_> will contain the
arguments you pass to the function as it did in Perl 5. Again, as with C<$_>,
you can call methods on it. Unlike C<$_> you cannot assume C<@_> as the
default variable for those methods to operate on. I. e. C<@_.shift> works,
C<.shift> does not.

=item $"
X<$">

Currently, there is no equivalent of the List Separator variable in Perl 6.
Design document S28 says there isn't one, so you probably don't want to hold
your breath.


=item $$
X<$$>

C<$$> is replaced in Perl 6 by C<$*PID>

=item $0
X<$0>

You can access the program name in Perl 6 via C<$*PROGRAM_NAME>.

Note: $0 in Perl 6 is the variable holding the first captured value from a
match (i. e. capture variables now start from $0 rather than $1).
